steps:

# Run checkov via DevOps Task (Console output)

- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.8'
  displayName: 'Install Python 3.8'
- script: pip install checkov
  displayName: 'Install the Checkov CLI'
- bash: | 
    mkdir CheckovReport
    checkov -d $(System.DefaultWorkingDirectory) --output json > $(System.DefaultWorkingDirectory)/CheckovReport/Checkov-Report.json
    exitCode=$?
    [[ $exitCode = 0 ]] && state="success" || state="failure"
    echo "##vso[task.setvariable variable=CheckovState;]$state"
    exit $exitCode
  displayName: 'Scan with Checkov Console Output'

# PROVIDE BUILD FEEDBACK
- task: PublishPipelineArtifact@1
  inputs:
    targetPath: $(System.DefaultWorkingDirectory)/CheckovReport
    artifactName: CheckovResults

# PROVIDE PR FEEDBACK
- template: azure-pipelines-github-feedback-template.yml  # Template reference
  parameters:
    name: checkov-test
    state: $(CheckovState)
  
# Run checkov via CLI (Junit Report output)

#- task: UsePythonVersion@0
#  inputs:
#    versionSpec: '3.8'
#  displayName: 'Install Python 3.8'
#- script: pip install checkov
#  displayName: 'Install the Checkov CLI'
#- script: |
#    mkdir CheckovReport
#    checkov -d $(System.DefaultWorkingDirectory) --output junitxml > $(System.DefaultWorkingDirectory)/CheckovReport/Checkov-Report.xml
#  displayName: 'Scan with Checkov Junit Report'
#  continueOnError: true
  
#- task: PublishTestResults@2
#  displayName: Publish Checkov Test Results
#  condition: succeededorFailed()
#  inputs:
#    testResultsFormat: 'JUnit'
#    testResultsFiles: '**/Checkov-Report.xml'
#    searchFolder: '$(System.DefaultWorkingDirectory)/CheckovReport'
#    mergeTestResults: false
#    testRunTitle: Checkov Scan
#    failTaskOnFailedTests: false
#    publishRunAttachments: true


# Run checkov via Docker Image (Console output)

# - script: |
#     mkdir CheckovReport
#     docker pull bridgecrew/checkov
#     docker run --volume $(System.DefaultWorkingDirectory):/tf bridgecrew/checkov --directory /tf -o cli
#   continueOnError: true
#   displayName: 'Checkov Console output'

# Run checkov via Docker Image (Junit Published Report)

# - script: |
#     mkdir CheckovReport
#     docker pull bridgecrew/checkov
#     docker run --volume $(System.DefaultWorkingDirectory):/tf bridgecrew/checkov --directory /tf --output junitxml > $(System.DefaultWorkingDirectory)/CheckovReport/Checkov-Report.xml
#   continueOnError: true
#   displayName: 'Checkov JUnit Published Results'

  
# - task: PublishTestResults@2
#   displayName: Publish Checkov Test Results
#   condition: succeededorFailed()
#   inputs:
#     testResultsFormat: 'JUnit'
#     testResultsFiles: '**/Checkov-Report.xml'
#     searchFolder: '$(System.DefaultWorkingDirectory)/CheckovReport'
#     mergeTestResults: false
#     testRunTitle: Checkov Scan
#     failTaskOnFailedTests: false
#     publishRunAttachments: true


