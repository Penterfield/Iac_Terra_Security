steps:

# Run checkov via Docker Image (Console output)

#- script: |
#    mkdir CheckovReport
#    docker pull bridgecrew/checkov
#    docker run --volume $(System.DefaultWorkingDirectory):/tf bridgecrew/checkov --directory /tf -o cli
#  continueOnError: true
#  displayName: 'Checkov Console output'

# Run checkov via Docker Image (Junit Published Report)

#- script: |
#    mkdir CheckovReport
#    docker pull bridgecrew/checkov
#    docker run --volume $(System.DefaultWorkingDirectory):/tf bridgecrew/checkov --directory /tf --output junitxml > $(System.DefaultWorkingDirectory)/CheckovReport/Checkov-Report.xml
#  continueOnError: true
#  displayName: 'Checkov JUnit Published Results'

# Run checkov pip install (Console output)

- script: |
#   pip3 install --upgrade pip && pip3 install --upgrade setuptools
#   pip3 install checkov
    echo $(pwd)
    pwd
  displayName: 'Install pip and checkov'
  
#- script: |
#    checkov -d $(System.DefaultWorkingDirectory) --output cli
#  displayName: 'Security test with Checkov'
  
#- script: |
#    mkdir CheckovReport
#    pip3 install --upgrade pip && pip3 install --upgrade setuptools && pip3 install checkov
#    checkov -d $(System.DefaultWorkingDirectory) --output junitxml > $(System.DefaultWorkingDirectory)/CheckovReport/Checkov-Report.xml 
#  continueOnError: true
#  displayName: 'Checkov Junit Published Results'
  
#- task: PublishTestResults@2
#  displayName: Publish Checkov Test Results
#  condition: succeededorFailed()
#  inputs:
#    testResultsFormat: 'JUnit'
#    testResultsFiles: '**/Checkov-Report.xml'
#    searchFolder: '$(System.DefaultWorkingDirectory)/CheckovReport'
#    mergeTestResults: false
#    testRunTitle: Checkov Scan
#    failTaskOnFailedTests: false
#    publishRunAttachments: true




 



 



